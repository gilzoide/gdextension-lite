#!/bin/env python
"""
GDExtension C binding generator script

Given the path to `extension_api.json` file generated by Godot 4, it writes
several header files with generated bindings in the given output directory.

Usage:
    binding_generator.py EXTENSION_API_PATH OUTPUT_DIR
"""

import json
import sys

from builtin_classes import generate_builtin_class
from enums import generate_all_enums
from header import HeaderWriter
from json_types import ExtensionApi


def main():
    if len(sys.argv) < 3:
        sys.stderr.write(__doc__.lstrip())
        sys.exit(-1)

    extension_api_path = sys.argv[1]
    output_dir = sys.argv[2]

    with open(extension_api_path, 'r') as file:
        extension_api: ExtensionApi = json.load(file)

    header_writer = HeaderWriter(*output_dir.split("/"))
    header_writer.write_header(
        generate_all_enums(extension_api['global_enums']),
        "global_enums",
    )

    for builtin_class in extension_api["builtin_classes"]:
        if builtin_class["name"] == 'Nil':
            continue

        contents, implementation = generate_builtin_class(builtin_class)
        header_writer.write_header(contents,
                                   "variant", builtin_class['name'].lower(),
                                   implementation=implementation)


if __name__ == "__main__":
    main()
